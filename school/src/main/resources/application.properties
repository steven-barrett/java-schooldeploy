# postgres://xelfljtufcjxin:bcc7cf6637ca3aa6f4ed910eacd4233cb6a4c05c38b0766dfa37a37c584f8742@ec2-174-129-226-234.compute-1.amazonaws.com:5432/d122n6airr5ugo
# posgress://username      :password                                                        @url                                        :5432/dbname
# steven122185-schooldeploy
# Which DB to run
#local.run.db=H2
local.run.db=POSTGRESQL

server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

spring.jpa.properties.hibernate.jdbc.lob.non_contexual_creation=true

# For h2 database
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# Turn off spring boot automatic exception handling
server.error.whitelabel.enabled=false

# needed for actuators to work
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true

# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/ourcourses
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD:password}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true




